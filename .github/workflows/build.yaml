name: Build Callout Pack

on:
  push:
      branches:
          - main
          - beta
          - alpha
          - 'feature/**'
          - 'bugfix/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
      if: |
          github.event_name == 'push' &&
          github.triggering_actor != 'dependabot[bot]'         &&
          (startsWith(github.event.head_commit.message, 'feat')  ||
          startsWith(github.event.head_commit.message, 'fix')  ||
          startsWith(github.event.head_commit.message, 'chore') ||
          startsWith(github.event.head_commit.message, 'build') ||
          startsWith(github.event.head_commit.message, 'ci') ||
          startsWith(github.event.head_commit.message, 'perf') ||
          startsWith(github.event.head_commit.message, 'refactor') ||
          startsWith(github.event.head_commit.message, 'revert') ||
          startsWith(github.event.head_commit.message, 'style') ||
          startsWith(github.event.head_commit.message, 'test') ||
          startsWith(github.event.head_commit.message, 'Merge')
          ) && !contains(github.event.head_commit.message, '[skip ci]')
      runs-on: windows-latest
      permissions:
        contents: write
      steps:
          - name: Checkout Repository
            uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # actions/checkout@v4

          - name: Setup NodeJS
            uses: actions/setup-node@c2ac33f2c62f978d6c944d9648125a294e56dc0b # actions/setup-node@v4.0.2
            with:
              node-version: '20.13.1'
          
          - name: Install Node Dependencies
            run: npm install --no-save --no-audit --no-fund --force semantic-release @actions/core
          
          - name: Determine Version Number
            id: semantic
            run: node ./.github/workflows/scripts/semantic-release.mjs
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          - name: .NET Build
            if: steps.semantic.outputs.new-release-published == 'true'
            run: dotnet build AttributeCalloutPack.sln -c Release -f net452

          - name: Create Production Release
            if: success() && github.event_name == 'push' && github.ref_name == 'main' && steps.semantic.outputs.new-release-published == 'true'
            uses: softprops/action-gh-release@69320dbe05506a9a39fc8ae11030b214ec2d1f87 # v2.0.4
            with:
              tag_name: v${{ steps.semantic.outputs.release-version }}
              body: ${{ steps.semantic.outputs.release-notes }}
              draft: false
              prerelease: false
              make_latest: true
              files: 'AttributeCalloutPack/bin/Release/AttributeCalloutPack.net.dll'

          - name: Create Beta Release
            if: success() && github.event_name == 'push' && github.ref_name == 'beta' && steps.semantic.outputs.new-release-published == 'true'
            uses: softprops/action-gh-release@69320dbe05506a9a39fc8ae11030b214ec2d1f87 # v2.0.4
            with:
              tag_name: v${{ steps.semantic.outputs.release-version }}
              body: ${{ steps.semantic.outputs.release-notes }}
              draft: false
              prerelease: true
              make_latest: false
              files: 'AttributeCalloutPack/bin/Release/AttributeCalloutPack.net.dll'

          - name: Delete tag is build unsuccessful
            if: failure()
            shell: bash
            run: git push origin refs/tags/v${{ steps.semantic.outputs.release-version }} --delete